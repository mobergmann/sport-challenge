openapi: 3.0.0
info:
  version: 0.1.0
  title: Sport Challenge
  description: >
    API for the Sport Challenge Backend. Can be used to build a frontend from
    the App.
paths:
  /auth/login:
    post:
      description: Creates a session for the current user
      tags:
        - auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginAccount'
      responses:
        '200':
          $ref: '#/components/responses/Account'
        '401':
          description: The username doesn't exist or the password didn't match
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /auth/logout:
    put:
      description: Invalidates the users session and therefore logs the user out.
      tags:
        - auth
      responses:
        '200':
          $ref: '#/components/responses/Account'
  /account:
    get:
      description: Returns the Account object for the current Account/Session.
      tags:
        - account
      responses:
        '200':
          description: Successful response
          $ref: '#/components/responses/Account'
        '401':
          description: The current session is not valid
    post:
      description: For creating a new account/ Signing Up
      tags:
        - account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccount'
      responses:
        '201':
          description: Successful response
          $ref: '#/components/responses/Account'
        '409':
          description: The username or the E-Mail is already taken
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    put:
      description: >-
        Edit the properties of the current Account (except the password, which
        has to be set by a seperate route).
      tags:
        - account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EditAccount'
      responses:
        '200':
          description: Successful response
          $ref: '#/components/responses/Account'
        '401':
          description: The current session is not valid
        '409':
          description: The username or the E-Mail is already taken
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    delete:
      description: (Permanently!!!) Delete the current Account.
      tags:
        - account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordValidation'
      responses:
        '200':
          description: Successful response
          $ref: '#/components/responses/Account'
        '401':
          description: The current session is not valid
  /account/password:
    put:
      description: Edit the Password of the current Account.
      tags:
        - account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordValidation'
      responses:
        '200':
          description: Successful response
          $ref: '#/components/responses/Account'
        '403':
          description: User is not logged in/ Session is not valid
  '/users/id/{id}':
    get:
      description: Returns the public profile of an User.
      tags:
        - users
      parameters:
        - name: id
          description: ID of the User
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful response
          $ref: '#/components/responses/User'
        '204':
          description: User with the id does not exist
        '403':
          description: User is not logged in/ Session is not valid
  '/users/{username}':
    get:
      description: Returns the public profile of an User.
      tags:
        - users
      parameters:
        - name: username
          description: Username of the User
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          $ref: '#/components/responses/User'
        '204':
          description: User with the username does not exist
        '403':
          description: User is not logged in/ Session is not valid
  /activities:
    post:
      description: Push a new Activity.
      tags:
        - activities
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewActivity'
      responses:
        '201':
          description: Successful response
          $ref: '#/components/responses/Activity'
        '403':
          description: User is not logged in/ Session is not valid
  '/activities/{id}':
    get:
      description: Get an Activity.
      tags:
        - activities
      parameters:
        - name: id
          description: ID of the activity
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful response
          $ref: '#/components/responses/Activity'
        '204':
          description: Activity with the id does not exist
        '403':
          description: User is not logged in/ Session is not valid
    put:
      description: Edit an Activity.
      tags:
        - activities
      parameters:
        - name: id
          description: ID of the activity
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewActivity'
      responses:
        '200':
          description: Successful response
          $ref: '#/components/responses/Activity'
        '204':
          description: Activity with the id does not exist
        '403':
          description: User is not logged in/ Session is not valid
    delete:
      description: Delete an Activity.
      tags:
        - activities
      parameters:
        - name: id
          description: ID of the activity
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful response
          $ref: '#/components/responses/Activity'
        '204':
          description: Activity with the id does not exist
        '403':
          description: User is not logged in/ Session is not valid
  '/activities/{from}/{to}':
    get:
      description: Get a list of activities in an given time Intervall.
      tags:
        - activities
      parameters:
        - name: from
          description: RFC 3339 Compliante DateTime String
          in: path
          required: true
          schema:
            type: string
            format: date
        - name: to
          description: RFC 3339 Compliante DateTime String
          in: path
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/responses/Activity'
        # todo bad request
        '403':
          description: User is not logged in/ Session is not valid
components:
  schemas:
    LoginAccount:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          format: password
    CreateAccount:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
          format: password
    EditAccount:
      type: object
      properties:
        username:
          type: string
    ActivityType:
      type: string
      enum:
        - PushUps
    BareActivity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        author_id:
          type: integer
          format: int64
        amount:
          type: integer
          format: int64
        activity_type:
          $ref: '#/components/schemas/ActivityType'
        start_time:
          type: string
          format: date
        end_time:
          type: string
          format: date
    NewActivity:
      type: object
      properties:
        amount:
          type: integer
          format: int64
        activity_type:
          $ref: '#/components/schemas/ActivityType'
        start_time:
          type: string
          format: date
        end_time:
          type: string
          format: date
    PasswordValidation:
      type: object
      properties:
        password:
          type: string
          format: password
  responses:
    Account:
      description: Account object
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: integer
                format: int64
              username:
                type: string
              password_hash:
                type: string
    User:
      description: (Public) User object
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: integer
                format: int64
              username:
                type: string
    Activity:
      description: Activity object
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: integer
                format: int64
              author_id:
                type: integer
                format: int64
              amount:
                type: integer
                format: int64
              activity_type:
                $ref: '#/components/schemas/ActivityType'
              start_time:
                type: string
                format: date
              end_time:
                type: string
                format: date
